# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - main

jobs:
  - job: macOS
    pool:
      vmImage: "macOS-latest"
    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
          architecture: "x64"

      - script: pipx install poetry
        displayName: "Install Poetry"

      - script: poetry install
        displayName: "Install Dependencies"

      - script: |
          poetry run pyinstaller -y macos.spec
        displayName: "Build pyInstaller Application"
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "$(Build.SourcesDirectory)/dist"
          archiveFile: "$(Build.SourcesDirectory)/dist.zip"

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: "$(Agent.OS)"
          pathtoPublish: "$(Build.SourcesDirectory)/dist.zip"

  - job: Windows
    pool:
      vmImage: "windows-latest"

    steps:
      - task: UsePythonVersion@0
        inputs:
          versionSpec: "3.9"
          architecture: "x64"

      - script: pipx install poetry
        displayName: "Install Poetry"

      - script: poetry install
        displayName: "Install Dependencies"

      - script: |
          poetry run pyinstaller -y macos.spec
        displayName: "Build pyInstaller Application"
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: "$(Build.SourcesDirectory)/dist"
          archiveFile: "$(Build.SourcesDirectory)/dist.zip"

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: "$(Agent.OS)"
          pathtoPublish: "$(Build.SourcesDirectory)/dist.zip"